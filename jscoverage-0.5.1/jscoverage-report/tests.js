/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['tests.js']) {
  _$jscoverage['tests.js'] = [];
  _$jscoverage['tests.js'][1] = 0;
  _$jscoverage['tests.js'][3] = 0;
  _$jscoverage['tests.js'][6] = 0;
  _$jscoverage['tests.js'][8] = 0;
  _$jscoverage['tests.js'][11] = 0;
  _$jscoverage['tests.js'][13] = 0;
  _$jscoverage['tests.js'][16] = 0;
  _$jscoverage['tests.js'][18] = 0;
  _$jscoverage['tests.js'][21] = 0;
  _$jscoverage['tests.js'][23] = 0;
  _$jscoverage['tests.js'][26] = 0;
  _$jscoverage['tests.js'][28] = 0;
  _$jscoverage['tests.js'][31] = 0;
  _$jscoverage['tests.js'][33] = 0;
  _$jscoverage['tests.js'][36] = 0;
  _$jscoverage['tests.js'][38] = 0;
  _$jscoverage['tests.js'][41] = 0;
  _$jscoverage['tests.js'][43] = 0;
  _$jscoverage['tests.js'][46] = 0;
  _$jscoverage['tests.js'][48] = 0;
  _$jscoverage['tests.js'][51] = 0;
  _$jscoverage['tests.js'][53] = 0;
  _$jscoverage['tests.js'][60] = 0;
  _$jscoverage['tests.js'][62] = 0;
  _$jscoverage['tests.js'][63] = 0;
  _$jscoverage['tests.js'][66] = 0;
  _$jscoverage['tests.js'][67] = 0;
  _$jscoverage['tests.js'][70] = 0;
  _$jscoverage['tests.js'][71] = 0;
  _$jscoverage['tests.js'][74] = 0;
  _$jscoverage['tests.js'][75] = 0;
  _$jscoverage['tests.js'][78] = 0;
  _$jscoverage['tests.js'][79] = 0;
  _$jscoverage['tests.js'][82] = 0;
  _$jscoverage['tests.js'][83] = 0;
  _$jscoverage['tests.js'][86] = 0;
  _$jscoverage['tests.js'][87] = 0;
  _$jscoverage['tests.js'][90] = 0;
  _$jscoverage['tests.js'][91] = 0;
  _$jscoverage['tests.js'][94] = 0;
  _$jscoverage['tests.js'][95] = 0;
  _$jscoverage['tests.js'][98] = 0;
  _$jscoverage['tests.js'][99] = 0;
  _$jscoverage['tests.js'][102] = 0;
  _$jscoverage['tests.js'][103] = 0;
  _$jscoverage['tests.js'][106] = 0;
  _$jscoverage['tests.js'][107] = 0;
  _$jscoverage['tests.js'][110] = 0;
  _$jscoverage['tests.js'][111] = 0;
  _$jscoverage['tests.js'][114] = 0;
  _$jscoverage['tests.js'][115] = 0;
  _$jscoverage['tests.js'][118] = 0;
  _$jscoverage['tests.js'][119] = 0;
  _$jscoverage['tests.js'][123] = 0;
  _$jscoverage['tests.js'][124] = 0;
  _$jscoverage['tests.js'][127] = 0;
  _$jscoverage['tests.js'][128] = 0;
  _$jscoverage['tests.js'][131] = 0;
  _$jscoverage['tests.js'][132] = 0;
  _$jscoverage['tests.js'][135] = 0;
  _$jscoverage['tests.js'][136] = 0;
  _$jscoverage['tests.js'][139] = 0;
  _$jscoverage['tests.js'][140] = 0;
  _$jscoverage['tests.js'][143] = 0;
  _$jscoverage['tests.js'][144] = 0;
  _$jscoverage['tests.js'][145] = 0;
  _$jscoverage['tests.js'][148] = 0;
  _$jscoverage['tests.js'][149] = 0;
  _$jscoverage['tests.js'][150] = 0;
}
_$jscoverage['tests.js'].source = ["<span class=\"k\">function</span> isFalse<span class=\"k\">(</span>val<span class=\"k\">)</span>","<span class=\"k\">{</span>","  <span class=\"k\">return</span> val <span class=\"k\">==</span> <span class=\"k\">false</span><span class=\"k\">;</span>  ","<span class=\"k\">}</span>","","<span class=\"k\">function</span> animate<span class=\"k\">(</span>val<span class=\"k\">)</span>","<span class=\"k\">{</span>","  <span class=\"k\">return</span> <span class=\"k\">(</span>w <span class=\"k\">&lt;</span> <span class=\"s\">5</span><span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>w <span class=\"k\">&gt;</span> <span class=\"k\">-</span><span class=\"s\">5</span><span class=\"k\">);</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> elemDisabled<span class=\"k\">(</span>val<span class=\"k\">)</span>","<span class=\"k\">{</span>","  <span class=\"k\">return</span> document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span>val<span class=\"k\">).</span>disabled <span class=\"k\">==</span> <span class=\"k\">true</span><span class=\"k\">;</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> radianValue<span class=\"k\">(</span>val<span class=\"k\">)</span>","<span class=\"k\">{</span>","  <span class=\"k\">return</span> val <span class=\"k\">==</span> <span class=\"k\">(</span>Math<span class=\"k\">.</span>PI<span class=\"k\">/</span><span class=\"s\">180</span><span class=\"k\">)</span> <span class=\"k\">*</span> <span class=\"s\">0</span><span class=\"k\">;;</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> roboXValue<span class=\"k\">(</span>val<span class=\"k\">)</span>","<span class=\"k\">{</span>","  <span class=\"k\">return</span> val <span class=\"k\">==</span> width<span class=\"k\">/</span><span class=\"s\">2</span><span class=\"k\">;</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> checkBool<span class=\"k\">(</span>val<span class=\"k\">)</span>","<span class=\"k\">{</span>","  <span class=\"k\">return</span> val <span class=\"k\">==</span> <span class=\"k\">true</span> <span class=\"k\">||</span> val <span class=\"k\">==</span> <span class=\"k\">false</span><span class=\"k\">;</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> isEmpty<span class=\"k\">(</span>val<span class=\"k\">)</span>","<span class=\"k\">{</span>","  <span class=\"k\">return</span> document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span>val<span class=\"k\">).</span>value <span class=\"k\">==</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> rWidth<span class=\"k\">(</span>val<span class=\"k\">)</span>","<span class=\"k\">{</span>","  <span class=\"k\">return</span> val <span class=\"k\">&lt;</span> <span class=\"s\">100</span> <span class=\"k\">&amp;&amp;</span> val <span class=\"k\">&gt;</span> <span class=\"s\">20</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> rHeight<span class=\"k\">(</span>val<span class=\"k\">)</span>","<span class=\"k\">{</span>","  <span class=\"k\">return</span> val <span class=\"k\">&lt;</span> <span class=\"s\">150</span> <span class=\"k\">&amp;&amp;</span> val <span class=\"k\">&gt;</span> <span class=\"s\">20</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> wWidth<span class=\"k\">(</span>val<span class=\"k\">)</span>","<span class=\"k\">{</span>","  <span class=\"k\">return</span> val <span class=\"k\">&lt;</span> <span class=\"s\">15</span> <span class=\"k\">&amp;&amp;</span> val <span class=\"k\">&gt;</span> <span class=\"s\">5</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> wHeight<span class=\"k\">(</span>val<span class=\"k\">)</span>","<span class=\"k\">{</span>","  <span class=\"k\">return</span> val <span class=\"k\">&lt;</span> <span class=\"s\">100</span> <span class=\"k\">&amp;&amp;</span> val <span class=\"k\">&gt;</span> <span class=\"s\">10</span>","<span class=\"k\">}</span>","","","","<span class=\"c\">/* -------------- Tests ------------ */</span>","","<span class=\"k\">function</span> runTests<span class=\"k\">()</span> <span class=\"k\">{</span>","","  test<span class=\"k\">(</span><span class=\"s\">'isFalse'</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span> ","    ok<span class=\"k\">(</span>isFalse<span class=\"k\">(</span>start<span class=\"k\">),</span> <span class=\"s\">'Start is false.'</span><span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">)</span> ","","  test<span class=\"k\">(</span><span class=\"s\">'Animation'</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","  \tok<span class=\"k\">(</span>animate<span class=\"k\">(</span>start<span class=\"k\">),</span> <span class=\"s\">'W value is normal.'</span><span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">)</span>","","  test<span class=\"k\">(</span><span class=\"s\">'Canvas Width'</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","    equal<span class=\"k\">(</span>width<span class=\"k\">,</span>canvas<span class=\"k\">.</span>width<span class=\"k\">,</span>  <span class=\"s\">'Width is ok.'</span><span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">)</span>","","  test<span class=\"k\">(</span><span class=\"s\">'Canvas Height'</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","    equal<span class=\"k\">(</span>height<span class=\"k\">,</span>canvas<span class=\"k\">.</span>height<span class=\"k\">,</span>  <span class=\"s\">'Height is ok.'</span><span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">)</span>","","  test<span class=\"k\">(</span><span class=\"s\">'roboX Value'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","    equal<span class=\"k\">(</span>roboX<span class=\"k\">,</span> width<span class=\"k\">/</span><span class=\"s\">2</span><span class=\"k\">,</span> <span class=\"s\">'roboX value is OK'</span><span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">)</span>","","  test<span class=\"k\">(</span><span class=\"s\">'Left wheel X Value'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","    equal<span class=\"k\">(</span>lWheelPosX<span class=\"k\">,</span> <span class=\"k\">-</span>roboWidth<span class=\"k\">/</span><span class=\"s\">2</span> <span class=\"k\">-</span> lWheelWidth<span class=\"k\">,</span> <span class=\"s\">'Left wheel X value is OK'</span><span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">)</span>","","  test<span class=\"k\">(</span><span class=\"s\">'Left wheel Y Value'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","    equal<span class=\"k\">(</span>lWheelPosY<span class=\"k\">,</span> <span class=\"k\">-</span>roboHeight<span class=\"k\">/</span><span class=\"s\">2</span> <span class=\"k\">+</span> roboHeight<span class=\"k\">/</span><span class=\"s\">8</span><span class=\"k\">,</span> <span class=\"s\">'Left wheel Y value is OK'</span><span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">)</span>","","  test<span class=\"k\">(</span><span class=\"s\">'Right Wheel X Value'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","    equal<span class=\"k\">(</span>rWheelPosX<span class=\"k\">,</span> roboWidth<span class=\"k\">/</span><span class=\"s\">2</span><span class=\"k\">,</span> <span class=\"s\">'Right Wheel X value is OK'</span><span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">)</span>","","  test<span class=\"k\">(</span><span class=\"s\">'Right Wheel Y Value'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","    equal<span class=\"k\">(</span>rWheelPosY<span class=\"k\">,</span> <span class=\"k\">-</span>roboHeight<span class=\"k\">/</span><span class=\"s\">2</span> <span class=\"k\">+</span> roboHeight<span class=\"k\">/</span><span class=\"s\">8</span><span class=\"k\">,</span> <span class=\"s\">'Right Wheel Y value is OK'</span><span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">)</span>","","  test<span class=\"k\">(</span><span class=\"s\">'Motor A'</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","    ok<span class=\"k\">(</span>checkBool<span class=\"k\">(</span>motorA<span class=\"k\">),</span> <span class=\"s\">'Motor A value is Ok.'</span><span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">)</span>","","  test<span class=\"k\">(</span><span class=\"s\">'Motor B'</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","    ok<span class=\"k\">(</span>checkBool<span class=\"k\">(</span>motorB<span class=\"k\">),</span> <span class=\"s\">'Motor B value is Ok.'</span><span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">)</span>","","  test<span class=\"k\">(</span><span class=\"s\">'get_path'</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","    ok<span class=\"k\">(</span>checkBool<span class=\"k\">(</span>get_path<span class=\"k\">),</span> <span class=\"s\">'get_path value is Ok.'</span><span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">)</span>","","  test<span class=\"k\">(</span><span class=\"s\">'Pause'</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","    ok<span class=\"k\">(</span>checkBool<span class=\"k\">(</span>pause_<span class=\"k\">),</span> <span class=\"s\">'Pause value is Ok.'</span><span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">)</span>","","  test<span class=\"k\">(</span><span class=\"s\">'resetpos'</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","    ok<span class=\"k\">(</span>checkBool<span class=\"k\">(</span>resetpos_<span class=\"k\">),</span> <span class=\"s\">'resetpos value is Ok.'</span><span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">)</span>","  ","  test<span class=\"k\">(</span><span class=\"s\">'resize'</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","    ok<span class=\"k\">(</span>checkBool<span class=\"k\">(</span>resize_<span class=\"k\">),</span> <span class=\"s\">'resize value is Ok.'</span><span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">)</span>","","","  test<span class=\"k\">(</span><span class=\"s\">'submit'</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","    ok<span class=\"k\">(</span>checkBool<span class=\"k\">(</span>submit_<span class=\"k\">),</span> <span class=\"s\">'submit value is Ok.'</span><span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">)</span>","","  test<span class=\"k\">(</span><span class=\"s\">'Crash'</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","    ok<span class=\"k\">(</span>checkBool<span class=\"k\">(</span>crash<span class=\"k\">),</span> <span class=\"s\">'Crash value is Ok.'</span><span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">)</span>","","  test<span class=\"k\">(</span><span class=\"s\">'Canvas Value'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","    equal<span class=\"k\">(</span>canvas<span class=\"k\">,</span> document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span><span class=\"s\">'my_canvas'</span><span class=\"k\">),</span> <span class=\"s\">'Canvas value is OK'</span><span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">)</span>","  ","  test<span class=\"k\">(</span><span class=\"s\">'Robot Width'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","    ok<span class=\"k\">(</span>rWidth<span class=\"k\">(</span>roboWidth<span class=\"k\">),</span> <span class=\"s\">'Robo Width value is OK'</span><span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">)</span>","","  test<span class=\"k\">(</span><span class=\"s\">'Robot Height'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","    ok<span class=\"k\">(</span>rHeight<span class=\"k\">(</span>roboHeight<span class=\"k\">),</span> <span class=\"s\">'Robo Height value is OK'</span><span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">)</span>","","  test<span class=\"k\">(</span><span class=\"s\">'Wheel Width'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","    ok<span class=\"k\">(</span>wWidth<span class=\"k\">(</span>lWheelWidth<span class=\"k\">),</span> <span class=\"s\">'Left Wheel Width value is OK'</span><span class=\"k\">);</span>","    ok<span class=\"k\">(</span>wWidth<span class=\"k\">(</span>rWheelWidth<span class=\"k\">),</span> <span class=\"s\">'Right Wheel Width value is OK'</span><span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">)</span>","","  test<span class=\"k\">(</span><span class=\"s\">'Wheel Height'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","    ok<span class=\"k\">(</span>wHeight<span class=\"k\">(</span>lWheelHeight<span class=\"k\">),</span> <span class=\"s\">'Left Wheel Height value is OK'</span><span class=\"k\">);</span>","    ok<span class=\"k\">(</span>wHeight<span class=\"k\">(</span>rWheelHeight<span class=\"k\">),</span> <span class=\"s\">'Right Wheel Height value is OK'</span><span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">)</span>","","<span class=\"k\">}</span>"];
_$jscoverage['tests.js'][1]++;
function isFalse(val) {
  _$jscoverage['tests.js'][3]++;
  return (val == false);
}
_$jscoverage['tests.js'][6]++;
function animate(val) {
  _$jscoverage['tests.js'][8]++;
  return ((w < 5) && (w > -5));
}
_$jscoverage['tests.js'][11]++;
function elemDisabled(val) {
  _$jscoverage['tests.js'][13]++;
  return (document.getElementById(val).disabled == true);
}
_$jscoverage['tests.js'][16]++;
function radianValue(val) {
  _$jscoverage['tests.js'][18]++;
  return (val == ((Math.PI / 180) * 0));
  _$jscoverage['tests.js'][18]++;
  ;
}
_$jscoverage['tests.js'][21]++;
function roboXValue(val) {
  _$jscoverage['tests.js'][23]++;
  return (val == (width / 2));
}
_$jscoverage['tests.js'][26]++;
function checkBool(val) {
  _$jscoverage['tests.js'][28]++;
  return ((val == true) || (val == false));
}
_$jscoverage['tests.js'][31]++;
function isEmpty(val) {
  _$jscoverage['tests.js'][33]++;
  return (document.getElementById(val).value == "");
}
_$jscoverage['tests.js'][36]++;
function rWidth(val) {
  _$jscoverage['tests.js'][38]++;
  return ((val < 100) && (val > 20));
}
_$jscoverage['tests.js'][41]++;
function rHeight(val) {
  _$jscoverage['tests.js'][43]++;
  return ((val < 150) && (val > 20));
}
_$jscoverage['tests.js'][46]++;
function wWidth(val) {
  _$jscoverage['tests.js'][48]++;
  return ((val < 15) && (val > 5));
}
_$jscoverage['tests.js'][51]++;
function wHeight(val) {
  _$jscoverage['tests.js'][53]++;
  return ((val < 100) && (val > 10));
}
_$jscoverage['tests.js'][60]++;
function runTests() {
  _$jscoverage['tests.js'][62]++;
  test("isFalse", (function () {
  _$jscoverage['tests.js'][63]++;
  ok(isFalse(start), "Start is false.");
}));
  _$jscoverage['tests.js'][66]++;
  test("Animation", (function () {
  _$jscoverage['tests.js'][67]++;
  ok(animate(start), "W value is normal.");
}));
  _$jscoverage['tests.js'][70]++;
  test("Canvas Width", (function () {
  _$jscoverage['tests.js'][71]++;
  equal(width, canvas.width, "Width is ok.");
}));
  _$jscoverage['tests.js'][74]++;
  test("Canvas Height", (function () {
  _$jscoverage['tests.js'][75]++;
  equal(height, canvas.height, "Height is ok.");
}));
  _$jscoverage['tests.js'][78]++;
  test("roboX Value", (function () {
  _$jscoverage['tests.js'][79]++;
  equal(roboX, (width / 2), "roboX value is OK");
}));
  _$jscoverage['tests.js'][82]++;
  test("Left wheel X Value", (function () {
  _$jscoverage['tests.js'][83]++;
  equal(lWheelPosX, (((- roboWidth) / 2) - lWheelWidth), "Left wheel X value is OK");
}));
  _$jscoverage['tests.js'][86]++;
  test("Left wheel Y Value", (function () {
  _$jscoverage['tests.js'][87]++;
  equal(lWheelPosY, (((- roboHeight) / 2) + (roboHeight / 8)), "Left wheel Y value is OK");
}));
  _$jscoverage['tests.js'][90]++;
  test("Right Wheel X Value", (function () {
  _$jscoverage['tests.js'][91]++;
  equal(rWheelPosX, (roboWidth / 2), "Right Wheel X value is OK");
}));
  _$jscoverage['tests.js'][94]++;
  test("Right Wheel Y Value", (function () {
  _$jscoverage['tests.js'][95]++;
  equal(rWheelPosY, (((- roboHeight) / 2) + (roboHeight / 8)), "Right Wheel Y value is OK");
}));
  _$jscoverage['tests.js'][98]++;
  test("Motor A", (function () {
  _$jscoverage['tests.js'][99]++;
  ok(checkBool(motorA), "Motor A value is Ok.");
}));
  _$jscoverage['tests.js'][102]++;
  test("Motor B", (function () {
  _$jscoverage['tests.js'][103]++;
  ok(checkBool(motorB), "Motor B value is Ok.");
}));
  _$jscoverage['tests.js'][106]++;
  test("get_path", (function () {
  _$jscoverage['tests.js'][107]++;
  ok(checkBool(get_path), "get_path value is Ok.");
}));
  _$jscoverage['tests.js'][110]++;
  test("Pause", (function () {
  _$jscoverage['tests.js'][111]++;
  ok(checkBool(pause_), "Pause value is Ok.");
}));
  _$jscoverage['tests.js'][114]++;
  test("resetpos", (function () {
  _$jscoverage['tests.js'][115]++;
  ok(checkBool(resetpos_), "resetpos value is Ok.");
}));
  _$jscoverage['tests.js'][118]++;
  test("resize", (function () {
  _$jscoverage['tests.js'][119]++;
  ok(checkBool(resize_), "resize value is Ok.");
}));
  _$jscoverage['tests.js'][123]++;
  test("submit", (function () {
  _$jscoverage['tests.js'][124]++;
  ok(checkBool(submit_), "submit value is Ok.");
}));
  _$jscoverage['tests.js'][127]++;
  test("Crash", (function () {
  _$jscoverage['tests.js'][128]++;
  ok(checkBool(crash), "Crash value is Ok.");
}));
  _$jscoverage['tests.js'][131]++;
  test("Canvas Value", (function () {
  _$jscoverage['tests.js'][132]++;
  equal(canvas, document.getElementById("my_canvas"), "Canvas value is OK");
}));
  _$jscoverage['tests.js'][135]++;
  test("Robot Width", (function () {
  _$jscoverage['tests.js'][136]++;
  ok(rWidth(roboWidth), "Robo Width value is OK");
}));
  _$jscoverage['tests.js'][139]++;
  test("Robot Height", (function () {
  _$jscoverage['tests.js'][140]++;
  ok(rHeight(roboHeight), "Robo Height value is OK");
}));
  _$jscoverage['tests.js'][143]++;
  test("Wheel Width", (function () {
  _$jscoverage['tests.js'][144]++;
  ok(wWidth(lWheelWidth), "Left Wheel Width value is OK");
  _$jscoverage['tests.js'][145]++;
  ok(wWidth(rWheelWidth), "Right Wheel Width value is OK");
}));
  _$jscoverage['tests.js'][148]++;
  test("Wheel Height", (function () {
  _$jscoverage['tests.js'][149]++;
  ok(wHeight(lWheelHeight), "Left Wheel Height value is OK");
  _$jscoverage['tests.js'][150]++;
  ok(wHeight(rWheelHeight), "Right Wheel Height value is OK");
}));
}
